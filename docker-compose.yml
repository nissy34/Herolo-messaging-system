version: '3.7'

services: 
    app:
        image: nissy34/herolo:latest
        networks: 
            - backend
        secrets:
            - source: sql_uri
            - source: jwt
        environment: 
            SQLALCHEMY_DATABASE_URI_FILE: /run/secrets/sql_uri
            SECRET_KEY_FILE: /run/secrets/jwt

        deploy:
            mode: replicated
            replicas: 4
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: any
                max_attempts: 5
            labels: 
                - "traefik.enable=true"
                - "traefik.docker.network=app_backend"
                ## HTTP Routers
                - "traefik.http.routers.app-rtr.entrypoints=https"
                - "traefik.http.routers.app-rtr.rule=Host(`herolo.duckdns.org`)"
                - "traefik.http.routers.app-rtr.tls=true"
 

                ## Middlewares
                - "traefik.http.routers.app-rtr.middlewares=middlewares-rate-limit@file"

                ## HTTP Services
                - "traefik.http.routers.app-rtr.service=app-svc"
                - "traefik.http.services.app-svc.loadbalancer.server.port=80"

    traefik:
        image: traefik:chevrotin 
        ports:
            - target: 80
              published: 80
              protocol: tcp
              mode: host
            - target: 443
              published: 443
              protocol: tcp
              mode: host
        networks: 
            - backend
        configs:
            - source: traefik_config
              target: /etc/traefik/traefik.yaml
            - source: traefik_rules
              target: /rules/rules.yaml
        secrets:
            - source: traefik_basicAuth_v1
              target: /shared/.htpasswd
        volumes:
            - "traefik_data_cert:/letsEncrypt"
            - "./logs:/logs"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        deploy:
            mode: replicated
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: any
                max_attempts: 5
            labels: 

                - "traefik.enable=true"

                # HTTP-to-HTTPS Redirect
                - "traefik.http.routers.http-catchall.entrypoints=http"
                - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
                - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
                - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"


    
                # HTTP Routers
                - "traefik.http.routers.traefik-rtr.entrypoints=https"
                - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.herolo.duckdns.org`)"
                - "traefik.http.routers.traefik-rtr.tls=true"

                - "traefik.http.routers.traefik-rtr.tls.certresolver=acmeResolver" # Comment out this line after first run of traefik to force the use of wildcard certs
                - "traefik.http.routers.traefik-rtr.tls.domains[0].main=herolo.duckdns.org"
                - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=traefik.herolo.duckdns.org"
 

                ## Services - API
                - "traefik.http.routers.traefik-rtr.service=api@internal"
                - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"

                ## Middlewares
                - "traefik.http.routers.traefik-rtr.middlewares=middlewares-basic-auth@file,middlewares-rate-limit@file" 
secrets:
    jwt:
        file: secrets/jwt_secret
    traefik_basicAuth_v1:
        file: secrets/.htpasswd
    sql_uri:
        file: secrets/mysql

configs:
    traefik_config:
        file: traefik/traefik.yaml
    traefik_rules:
        file: traefik/rules/rules.yaml

networks: 
    backend:
volumes: 
    traefik_data_cert: